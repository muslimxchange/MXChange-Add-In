{"version":3,"file":"functions.js","mappings":"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","sources":["webpack://excel-custom-functions-js/./src/functions/functions.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/* global console setInterval, clearInterval */\n/**\n * Excel custom function: Checks if a ticker is compliant via WordPress API.\n * @customfunction\n * @param {string} ticker The ticker symbol to check.\n * @returns {Promise<string>} The compliance status message.\n */\n/**\n * @customfunction COMPLIANT\n * @param {string} ticker\n * @returns {Promise<string>}\n */\nasync function Compliant(ticker) {\n  const apiBase = \"https://muslimxchange.com/wp-json/mx/v1\";\n\n  try {\n    const token = await OfficeRuntime.storage.getItem(\"jwt\");\n\n    if (!token) {\n      return [[\"Login required\"]];\n    }\n    const callingURL = `${apiBase}/hello?ticker=${encodeURIComponent(ticker)}&token=${encodeURIComponent(token || \"\")}`;\n\n    let res;\n    try {\n      res = await fetch(callingURL);\n    } catch {\n      return \"Network Error\";\n    }\n\n    if (!res.ok) {\n      return `API Error ${res.status}`;\n    }\n\n    const data = await res.json();\n    return data.message || `Unknown status for ${ticker}`;\n  } catch {\n    return \"Request Failed\";\n  }\n}\n\n/**\n * Fetches data for a ticker with specific fields.\n * @customfunction TICKER\n * @param {string} ticker\n * @param {string[]} fields\n * @returns {Promise<any[][]>}\n */\nasync function TICKER(ticker, ...fields) {\n  const apiBase = \"https://muslimxchange.com/wp-json/mx/v1\";\n  const token = await OfficeRuntime.storage.getItem(\"jwt\");\n  \n  if (!token) {\n    return [[\"Login required\"]];\n  }\n  const fieldList = fields.flat().join(\",\");\n\n  const url = `${apiBase}/ticker-data?ticker=${encodeURIComponent(ticker)}&fields=${encodeURIComponent(fieldList)}&token=${encodeURIComponent(token || \"\")}`;\n\n  try {\n    const res = await fetch(url);\n    if (!res.ok) return [[`API Error ${res.status}`]];\n\n    const data = await res.json();\n    const row = [];\n\n    const flatFields = fields.flat();\n    for (let i = 0; i < flatFields.length; i++) {\n      const field = flatFields[i];\n      const value = data[field];\n      const isLast = i === flatFields.length - 1;\n    \n      // Push only if it's not the last OR it's defined\n      if (!isLast || (value !== undefined && value !== null && value !== \"\")) {\n        row.push(value ?? \"Unknown\");\n      }\n    }\n    \n    return [row];\n  } catch {\n    return [[\"Request Failed\"]];\n  }\n}\n\n\n/**\n * Fetches data for a ISIN with specific fields.\n * @customfunction ISIN\n * @param {string} isin\n * @param {string[]} fields\n * @returns {Promise<any[][]>}\n */\nasync function ISIN(ISIN, ...fields) {\n  const apiBase = \"https://muslimxchange.com/wp-json/mx/v1\";\n  const token = await OfficeRuntime.storage.getItem(\"jwt\");\n  \n  if (!token) {\n    return [[\"Login required\"]];\n  }\n  const fieldList = fields.flat().join(\",\");\n\n  const url = `${apiBase}/isin-data?isin=${encodeURIComponent(ISIN)}&fields=${encodeURIComponent(fieldList)}&token=${encodeURIComponent(token || \"\")}`;\n\n  try {\n    const res = await fetch(url);\n    if (!res.ok) return [[`API Error ${res.status}`]];\n\n    const data = await res.json();\n    const row = [];\n\n    const flatFields = fields.flat();\n    for (let i = 0; i < flatFields.length; i++) {\n      const field = flatFields[i];\n      const value = data[field];\n      const isLast = i === flatFields.length - 1;\n    \n      // Push only if it's not the last OR it's defined\n      if (!isLast || (value !== undefined && value !== null && value !== \"\")) {\n        row.push(value ?? \"Unknown\");\n      }\n    }\n    \n    return [row];\n  } catch {\n    return [[\"Request Failed\"]];\n  }\n}\n\n\n\n/**\n * Appends a message to the log.\n * @customfunction LOG\n * @param {string} message String to log.\n * @returns {Promise<string>} The logged message.\n \nasync function logMessage(message) {\n  let existingLog = await OfficeRuntime.storage.getItem(\"cfLogs\").catch(() => \"\");\n  let updatedLog = (existingLog || \"\") + message + \"\\n\";\n  await OfficeRuntime.storage.setItem(\"cfLogs\", updatedLog);\n  return message;\n}\n\n/**\n * Returns all logged messages as a vertical array.\n * @customfunction GETLOGS\n * @returns {Promise<string[][]>} Array of log entries, one per row.\n \nasync function getLogs() {\n  let log = await OfficeRuntime.storage.getItem(\"cfLogs\").catch(() => \"\");\n  let lines = (log || \"\").trim().split(\"\\n\");\n  return lines.map(line => [line]); // Make it 2D vertical array\n}\n*/\n\nCustomFunctions.associate(\"COMPLIANT\", Compliant);\nCustomFunctions.associate(\"TICKER\", TICKER);\nCustomFunctions.associate(\"ISIN\", ISIN);"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_Compliant","_callee","ticker","apiBase","token","callingURL","res","data","_context","OfficeRuntime","storage","getItem","concat","encodeURIComponent","fetch","t0","ok","status","json","message","t1","_TICKER","_callee2","_len","fields","_key","fieldList","url","row","flatFields","field","_args2","_context2","Array","flat","join","_ISIN","_callee3","ISIN","_len2","_key2","_args3","_context3","CustomFunctions","associate","_x","_x2","_x3"],"sourceRoot":""}